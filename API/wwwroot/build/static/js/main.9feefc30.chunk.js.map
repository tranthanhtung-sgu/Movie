{"version":3,"sources":["App/Models/pagination.ts","App/api/agent.tsx","App/Store/store.ts","App/Store/movieStore.ts","Component/Card/CardMovie.tsx","Component/Home/LeftHome.tsx","Component/Home/Home.tsx","Component/Common/NavBar.tsx","Component/Detail/IFrame.tsx","Component/Detail/Detail.tsx","App.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","sleep","delay","Promise","resolve","setTimeout","axios","defaults","baseURL","process","interceptors","response","use","a","headers","JSON","parse","responseBody","request","url","get","then","agent","Movies","list","params","detail","id","store","movieStore","movieRegistry","Map","selectedMovie","undefined","loading","loadingInitial","pagingParams","predicate","set","setPagingParams","setPredicate","value","delete","setPagination","loadMovies","axiosParams","result","runInAction","forEach","movie","setMovie","console","log","loadMovie","getMovie","clearSelectedMovie","makeAutoObservable","reaction","keys","clear","Array","from","values","URLSearchParams","append","toString","key","StoreContext","createContext","useStore","useContext","observer","str","className","style","textDecoration","to","category","alt","src","image","title","length","substring","moviesArray","Container","Row","Col","xl","Button","variant","totalItems","map","md","useState","loadingNext","setLoadingNext","useEffect","size","xs","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","textAlign","color","fontSize","marginTop","display","handleChangeCategory","categoryName","history","push","type","onClick","href","htmlFor","chapUrl","useRouteMatch","path","chap","useParams","link","setLink","temp","find","x","parseInt","width","height","position","paddingBottom","allow","left","top","overflow","frameBorder","allowFullScreen","window","scrollTo","lg","backgroundImage","time","director","publishYear","description","i","Switch","exact","App","component","Home","render","Detail","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.9feefc30.chunk.js","sourcesContent":["export interface Pagination {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n  data: T;\n  pagination: Pagination;\n\n  constructor(data: T, pagination: Pagination) {\n    this.data = data;\n    this.pagination = pagination;\n  }\n}\n\nexport class PagingParams {\n  pageNumber;\n  pageSize;\n\n  constructor(pageNumber = 1, pageSize = 8) {\n    this.pageNumber = pageNumber;\n    this.pageSize = pageSize;\n  }\n}\n","import axios, { AxiosResponse } from \"axios\";\nimport { Movie } from \"../Models/movie\";\nimport { PaginatedResult } from \"../Models/pagination\";\n\nconst sleep = (delay: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n};\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.response.use(async (response) => {\n  await sleep(0);\n  const pagination = response.headers[\"pagination\"];\n  if (pagination) {\n    response.data = new PaginatedResult(response.data, JSON.parse(pagination));\n    return response as AxiosResponse<PaginatedResult<any>>;\n  }\n  return response;\n});\n\nconst responseBody = <T,>(response: AxiosResponse<T>) => response.data;\n\nconst request = {\n  get: <T,>(url: string) => axios.get<T>(url).then(responseBody),\n  post: <T,>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\n  put: <T,>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\n  del: <T,>(url: string) => axios.delete<T>(url).then(responseBody),\n};\n\nconst Movies = {\n  list: (params: URLSearchParams) => axios.get<PaginatedResult<Movie[]>>(\"/movie\", { params }).then(responseBody),\n  detail: (id: string) => request.get<Movie>(`/movie/${id}`),\n};\n\nconst agent = {\n  Movies,\n};\nexport default agent;\n","import { createContext, useContext } from \"react\";\nimport MovieStore from \"./movieStore\";\n\ninterface Store {\n  movieStore: MovieStore;\n}\n\nexport const store: Store = {\n  movieStore: new MovieStore(),\n};\n\nexport const StoreContext = createContext(store);\n\nexport function useStore() {\n  return useContext(StoreContext);\n}\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Movie } from \"../Models/movie\";\nimport { Pagination, PagingParams } from \"../Models/pagination\";\n\nexport default class MovieStore {\n  movieRegistry = new Map<string, Movie>();\n  selectedMovie: Movie | undefined = undefined;\n  loading = false;\n  loadingInitial = true;\n  pagination: Pagination | null = null;\n  pagingParams = new PagingParams();\n  predicate = new Map().set(\"category\", \"all\");\n\n  get moviesArray() {\n    return Array.from(this.movieRegistry.values());\n  }\n\n  constructor() {\n    makeAutoObservable(this);\n    reaction(\n      () => this.predicate.keys(),\n      () => {\n        this.pagingParams = new PagingParams();\n        this.movieRegistry.clear();\n        this.loadMovies();\n      }\n    );\n  }\n  setPagingParams = (pagingParams: PagingParams) => {\n    this.pagingParams = pagingParams;\n  };\n  get axiosParams() {\n    const params = new URLSearchParams();\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\n    this.predicate.forEach((value, key) => {\n      params.append(key, value);\n    });\n    return params;\n  }\n\n  setPredicate = (predicate: string, value: string) => {\n    // const resetPredicate = () => {\n    //   this.predicate.forEach((value, key) => {\n    //     this.predicate.delete(key);\n    //   });\n    // };\n    switch (predicate) {\n      case \"category\":\n        this.predicate.delete(\"category\");\n        this.predicate.set(\"category\", value);\n        break;\n    }\n  };\n\n  setPagination = (pagination: Pagination) => {\n    this.pagination = pagination;\n  };\n\n  loadMovies = async () => {\n    this.loadingInitial = true;\n    try {\n      const result = await agent.Movies.list(this.axiosParams);\n      runInAction(() => {\n        result.data.forEach((movie) => {\n          this.setMovie(movie);\n        });\n        this.setPagination(result.pagination);\n        this.loadingInitial = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loadingInitial = false;\n      });\n    }\n  };\n\n  loadMovie = async (id: string) => {\n    let movie = this.getMovie(id);\n    if (movie) {\n      this.selectedMovie = movie;\n      return movie;\n    } else {\n      this.loadingInitial = true;\n      try {\n        movie = await agent.Movies.detail(id);\n        this.setMovie(movie);\n        runInAction(() => {\n          this.selectedMovie = movie;\n          this.loadingInitial = false;\n        });\n        return movie;\n      } catch (error) {\n        console.log(error);\n        runInAction(() => {\n          this.loadingInitial = false;\n        });\n      }\n    }\n  };\n\n  private getMovie(id: string) {\n    return this.movieRegistry.get(id);\n  }\n\n  setMovie(movie: Movie) {\n    this.movieRegistry.set(movie.id, movie);\n  }\n\n  clearSelectedMovie = () => {\n    this.selectedMovie = undefined;\n  };\n}\n","/* eslint-disable jsx-a11y/img-redundant-alt */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Movie } from \"../../App/Models/movie\";\nimport { Link } from \"react-router-dom\";\n\ninterface Props {\n  movie: Movie;\n}\nfunction truncate(str: string) {\n  return str.length > 40 ? str.substring(0, 35) + \"...\" : str;\n}\nexport default observer(function CardMovie({ movie }: Props) {\n  return (\n    <div className=\"movie-item\">\n      <Link\n        style={{ textDecoration: \"none\" }}\n        to={movie.category === \"phim bo\" ? `/phim/${movie.id}/chap/1` : `/phim/${movie.id}/chap/0`}\n      >\n        <img className=\"movie-item__img\" alt=\"img\" src={movie.image} />\n      </Link>\n      <Link style={{ textDecoration: \"none\" }} to={`/phim/${movie.id}`}>\n        <div className=\"movie-item__title\">{truncate(movie.title)}</div>\n      </Link>\n    </div>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport { useStore } from \"../../App/Store/store\";\nimport CardMovie from \"../Card/CardMovie\";\n\nexport default observer(function LeftHome() {\n  const {\n    movieStore: { moviesArray, pagination },\n  } = useStore();\n\n  return (\n    <Container>\n      <Row className=\"row-filter\">\n        <Col xl={6}>\n          <h1 className=\"title\">Phim mới</h1>\n        </Col>\n        <Col xl={6} className=\"m-auto\">\n          <Button variant=\"light ml-2 btn-filter-film active\">Tất cả phim ({pagination!.totalItems})</Button>\n          <Button variant=\"dark ml-2 btn-filter-film\">Sắp chiếu</Button>\n          <Button variant=\"dark ml-2 btn-filter-film\">Phim mới</Button>\n        </Col>\n      </Row>\n      <Row className=\"cards-film mt-3\">\n        {moviesArray.map((movie) => (\n          <Col key={movie.id} md={3}>\n            <CardMovie movie={movie} />\n          </Col>\n        ))}\n      </Row>\n    </Container>\n  );\n});\n","/* eslint-disable jsx-a11y/iframe-has-title */\nimport { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useState } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { PagingParams } from \"../../App/Models/pagination\";\nimport { useStore } from \"../../App/Store/store\";\nimport \"./Home.css\";\nimport LeftHome from \"./LeftHome\";\n\nexport default observer(function Home() {\n  const {\n    movieStore: { movieRegistry, loadMovies, loadingInitial, setPagingParams, pagination },\n  } = useStore();\n\n  const [loadingNext, setLoadingNext] = useState(false);\n\n  function handleGetNext() {\n    setLoadingNext(true);\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\n    loadMovies().then(() => setLoadingNext(false));\n  }\n\n  useEffect(() => {\n    if (movieRegistry.size <= 1) loadMovies();\n  }, [movieRegistry.size, loadMovies]);\n  if (loadingInitial && !loadingNext) return null;\n  return (\n    <div className=\"container\">\n      <Row className=\"\">\n        <Col xs={9} className=\"left-side\">\n          <InfiniteScroll\n            pageStart={0}\n            loadMore={handleGetNext}\n            hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}\n            initialLoad={false}\n          >\n            <LeftHome />\n          </InfiniteScroll>\n          <div\n            style={{\n              textAlign: \"center\",\n              color: \"#fff\",\n              fontSize: 50,\n              marginTop: -10,\n              display: pagination!.currentPage === pagination!.totalPages ? \"none\" : \"block\",\n            }}\n          >\n            Continue...\n          </div>\n        </Col>\n        <Col xs={3} className=\"hint-1\">\n          3 of 3\n        </Col>\n      </Row>\n    </div>\n  );\n});\n","/* eslint-disable jsx-a11y/anchor-has-content */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { history } from \"../..\";\nimport { useStore } from \"../../App/Store/store\";\nimport \"./NavBar.css\";\nexport default observer(function NavBar() {\n  const {\n    movieStore: { setPredicate, loadMovies },\n  } = useStore();\n  function handleChangeCategory(categoryName: string) {\n    setPredicate(\"category\", categoryName);\n    loadMovies().then(() => {});\n    history.push(\"/\");\n  }\n  return (\n    <nav>\n      <input id=\"nav-toggle\" type=\"checkbox\" />\n      <Link to=\"/\">\n        <div onClick={() => handleChangeCategory(\"all\")} className=\"logo\">\n          Thanh <strong>&#8287;Tùng</strong>\n        </div>\n      </Link>\n      <ul className=\"links\">\n        <li>\n          <a onClick={() => handleChangeCategory(\"phim bo\")}>Phim bộ</a>\n        </li>\n        <li>\n          <a onClick={() => handleChangeCategory(\"phim rap\")}>Phim chiếu rạp</a>\n        </li>\n        <li>\n          <a href=\"#phimviet\">Phim Việt Nam</a>\n        </li>\n        <li>\n          <a onClick={() => handleChangeCategory(\"phim le\")}>Phim lẻ</a>\n        </li>\n        <li>\n          <a href=\"#phimhoathinh\">Phim hoạt hình</a>\n        </li>\n      </ul>\n      <label htmlFor=\"nav-toggle\" className=\"icon-burger\">\n        <div className=\"line\"></div>\n        <div className=\"line\"></div>\n        <div className=\"line\"></div>\n      </label>\n    </nav>\n  );\n});\n","/* eslint-disable jsx-a11y/iframe-has-title */\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Row } from \"react-bootstrap\";\nimport { useParams, useRouteMatch } from \"react-router\";\nimport { ChapUrl } from \"../../App/Models/chapUrl\";\n\ninterface Props {\n  chapUrl: ChapUrl[];\n}\n\nexport default observer(function IFrame({ chapUrl }: Props) {\n  let { path, url } = useRouteMatch();\n  const { chap } = useParams<{ chap: string }>();\n  console.log(path);\n  console.log(url);\n  const [link, setLink] = useState(\"\");\n  useEffect(() => {\n    const temp = chapUrl!.find((x) => x.chap === parseInt(chap));\n    if (chap === \"0\" || temp === undefined) {\n      setLink(chapUrl[0].url);\n    }\n    if (temp && temp!.chap !== 0) {\n      setLink(temp.url);\n    }\n    return () => {};\n  }, [setLink, chapUrl, chap]);\n  return (\n    <Row>\n      <div\n        className=\"iframe__container\"\n        style={{ width: \"100%\", height: 0, position: \"relative\", paddingBottom: \"56.250%\", marginTop: 40 }}\n      >\n        <iframe\n          allow=\"autoplay\"\n          src={`${link}`}\n          style={{ width: \"100%\", height: \"100%\", position: \"absolute\", left: 0, top: 0, overflow: \"hidden\" }}\n          frameBorder={0}\n          allowFullScreen={true}\n        ></iframe>\n      </div>\n    </Row>\n  );\n});\n","/* eslint-disable jsx-a11y/iframe-has-title */\nimport { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Switch from \"react-bootstrap/esm/Switch\";\nimport { Route, useParams, useRouteMatch } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { useStore } from \"../../App/Store/store\";\nimport \"./Detail.css\";\nimport IFrame from \"./IFrame\";\n\nexport default observer(function Detail() {\n  const {\n    movieStore: { loadMovie, clearSelectedMovie, selectedMovie: movie },\n  } = useStore();\n  const { id } = useParams<{ id: string }>();\n  let { url } = useRouteMatch();\n\n  useEffect(() => {\n    if (id) loadMovie(id);\n    window.scrollTo(0, 0);\n    return () => clearSelectedMovie();\n  }, [id, loadMovie, clearSelectedMovie]);\n  if (!movie) return null;\n  return (\n    <Container className=\"\">\n      <Row className=\"header-content-block  \">\n        <Col lg={5}>\n          <div className=\"movie__image\" style={{ backgroundImage: `url(${movie.image})` }}></div>\n        </Col>\n        <Col lg={7}>\n          <h1 className=\"title__movie\">{movie.title}</h1>\n          <div className=\"info-wrapper\">\n            <div className=\"preview__film\">\n              <div className=\"time\">\n                <h6 className=\"preview__label\">Thời lượng:</h6>\n                <h6 className=\"preview__content\">{movie.time}</h6>\n              </div>\n              <div className=\"director\">\n                <h6 className=\"preview__label\">Đạo diễn:</h6>\n                <h6 className=\"preview__content\">{movie.director}</h6>\n              </div>\n              <div>\n                <i style={{ color: \"yellow\" }} className=\"far fa-clock\"></i> {movie.publishYear}\n              </div>\n            </div>\n            <div className=\"review__film\">\n              <p>{movie.description}</p>\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <div style={{ width: \"100%\", textAlign: \"center\", marginTop: 30 }}>\n        {movie.chapUrl.length !== 0\n          ? movie.chapUrl.map((chap, i) => (\n              <div style={{ display: \"inline-flex\", textAlign: \"center\" }} key={i}>\n                <Link to={`${url}/chap/${i + 1}`}>\n                  <button className=\"btn btn-light m-2\">{i + 1}</button>\n                </Link>\n              </div>\n            ))\n          : \"\"}\n      </div>\n\n      <Switch>\n        <Route exact path={`${url}/chap/:chap`}>\n          <IFrame chapUrl={movie.chapUrl} />\n        </Route>\n        {/* <Route exact path={`${url}`}>\n          <IFrame chapUrl={movie.chapUrl} />\n        </Route> */}\n      </Switch>\n    </Container>\n  );\n});\n","import \"./App.css\";\nimport { Route } from \"react-router\";\nimport Home from \"./Component/Home/Home\";\nimport NavBar from \"./Component/Common/NavBar\";\nimport Detail from \"./Component/Detail/Detail\";\n\nfunction App() {\n  return (\n    <>\n      <NavBar />\n      <Route exact path={\"/\"} component={Home} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <>\n            <Route path={\"/phim/:id\"} component={Detail} />\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Router } from \"react-router\";\nimport { createBrowserHistory } from \"history\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { store, StoreContext } from \"./App/Store/store\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}